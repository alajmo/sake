import:
  - ./tasks/tasks.yaml

known_hosts_file: known_hosts
disable_verify_host: true

servers:
  localhost:
    desc: localhost
    host: 0.0.0.0
    local: true
    tags: [local]

  remote:
    host: 0.0.0.0
    # host: 172.24.2.2
    local: true
    # user: test
    # identity_file: ../keys/id_ed25519_pem_no
    # work_dir: does_not_exist
    tags: [kaka]

  list:
    desc: many hosts using list of hosts
    hosts:
      - 172.24.2.2
      - 172.24.2.4
      - 172.24.2.5
      - 172.24.2.6
      - 172.24.2.7
    user: test
    identity_file: ../keys/id_ed25519_pem_no
    tags: [remote, pi, many, list, "hej san"]
    env:
      hello: world
      host: 172.24.2.4

  range:
    desc: many hosts using range
    hosts: 172.24.2.[4:6:1]
    user: test
    identity_file: ../keys/id_ed25519_pem_no
    tags: [remote, pi, many, range]
    env:
      hello: world
      host: 172.24.2.4

  inv:
    desc: many hosts using inventory
    inventory: ./inventory.sh $opt
    user: test
    identity_file: ../keys/id_ed25519_pem_no
    tags: [remote, pi, many, inv]
    env:
      hello: world
      hosts: 172.24.2.4

  server-1:
    desc: server-1 desc
    host: sake-resolve
    tags: [remote, pi, bastion]
    work_dir: /tmp

  server-2:
    desc: server-2 desc
    host: sake-resolve
    tags: [remote, pi, bastion]

  server-3:
    desc: server-3 desc
    host: 172.24.2.4
    user: test
    identity_file: ../keys/id_ed25519_pem_no
    tags: [remote, pi, pihole]
    env:
      FOO: 123

  server-4:
    desc: server-4 desc
    host: 172.24.2.5
    user: test
    identity_file: ../keys/id_ed25519_pem
    password: testing
    tags: [remote, pi, pihole]

  ip6-1:
    desc: ip6-1 desc
    host: test@[2001:3984:3989::10]:22
    user: test
    password: test
    tags: [remote, reachable]

  ip6-2:
    desc: ip6-2 desc
    host: 2001:3984:3989::11
    port: 33
    user: test
    password: test
    tags: [remote, reachable]

targets:
  all:
    desc: Select all
    all: true

  limit:
    all: true
    limit: 3

  limit_p:
    all: true
    limit: 50

  list:
    servers: [list]

  regex:
    regex: 192

  servers:
    servers: [server-1, server-2]

  tags:
    tags: [remote, reachable]

  mult:
    desc: Info
    all: true
    regex: 192
    servers: [server-1, range]
    tags: [remote]
    limit: 3

specs:
  table:
    output: table
    # describe: true
    silent: true

  text:
    output: text

  info:
    desc: Info
    output: table
    ignore_errors: true
    ignore_unreachable: true
    any_errors_fatal: false

  linear:
    desc: Linear
    strategy: linear
    # forks: 2
    batch: 2
    # batch_p: 50
    output: text
    ignore_errors: true
    ignore_unreachable: false
    any_errors_fatal: true
    # max_fail_percentage: 60
    report: [recap]

  host_pinned:
    desc: Host Pinned
    strategy: host_pinned
    order: sorted
    # forks: 2
    batch: 2
    # batch_p: 50
    output: text
    ignore_errors: true
    ignore_unreachable: true
    # any_errors_fatal: false
    max_fail_percentage: 60
    report: [recap]

  free:
    desc: Free
    strategy: free
    batch: 2
    # forks: 2
    output: text
    ignore_errors: false
    ignore_unreachable: true
    # any_errors_fatal: true
    max_fail_percentage: 60

# themes:
#   default:
#     text:
#       header: '{{ .Style "TASK" "bold" }} {{ .Name }}'
#       header_filler: "-"

env:
  VERSION: v0.1.0
  DATE: $(date -u +"%Y-%m-%dT%H:%M:%S%Z")

tasks:
  register:
    tasks:
      - cmd: echo "foo" && >&2 echo "error"
        register: out
      - cmd: |
          echo "status: $out_status"
          echo "rc: $out_rc"
          echo "failed: $out_failed"
          echo "stdout: $out_stdout"
          echo "stderr: $out_stderr"
          echo "out:"
          echo "$out"

  # ping:
  #   target: all
  #   spec: host_pinned
  #   desc: ping server
  #   cmd: echo pong

  ping:
    desc: Pong
    target:
      tags: [kaka]
    # cmd: echo pong
    tasks:
      - cmd: echo pong

  # exit:
  #   # name: Exit
  #   local: true
  #   cmd: exit 3

  # sleep:
  #   desc: ping server
  #   cmd: sleep 2 & echo done

  # info:
  #   name: Info
  #   desc: print info
  #   target: all
  #   tasks:
  #     - task: print-host
  #     - task: print-hostname
  #     - task: print-os
  #     - task: print-kernel

  # # Info
  # print-host:
  #   name: Host
  #   desc: print host
  #   spec: info
  #   target: all
  #   cmd: echo $S_HOST

  # print-hostname:
  #   name: Hostname
  #   desc: print hostname
  #   spec: info
  #   target: all
  #   cmd: hostname

  # print-os:
  #   name: OS
  #   desc: print OS
  #   spec: info
  #   target: all
  #   cmd: |
  #     os=$(lsb_release -si)
  #     release=$(lsb_release -sr)
  #     echo "$os $release"

  # print-kernel:
  #   name: Kernel
  #   desc: Print kernel version
  #   spec: info
  #   target: all
  #   cmd: uname -r | awk -v FS='-' '{print $1}'
