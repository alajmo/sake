"use strict";(self.webpackChunksake=self.webpackChunksake||[]).push([[53],{9233:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>d,contentTitle:()=>l,default:()=>p,frontMatter:()=>t,metadata:()=>a,toc:()=>o});var i=n(5893),r=n(1151);const t={},l="Command Reference",a={id:"command-reference",title:"Command Reference",description:"sake",source:"@site/../../sake/docs/command-reference.md",sourceDirName:".",slug:"/command-reference",permalink:"/command-reference",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Config Reference",permalink:"/config-reference"},next:{title:"Inventory",permalink:"/inventory"}},d={},o=[{value:"sake",id:"sake",level:2},{value:"Synopsis",id:"synopsis",level:3},{value:"Options",id:"options",level:3},{value:"check",id:"check",level:2},{value:"Synopsis",id:"synopsis-1",level:3},{value:"Examples",id:"examples",level:3},{value:"Options",id:"options-1",level:3},{value:"run",id:"run",level:2},{value:"Synopsis",id:"synopsis-2",level:3},{value:"Examples",id:"examples-1",level:3},{value:"Options",id:"options-2",level:3},{value:"exec",id:"exec",level:2},{value:"Synopsis",id:"synopsis-3",level:3},{value:"Examples",id:"examples-2",level:3},{value:"Options",id:"options-3",level:3},{value:"init",id:"init",level:2},{value:"Synopsis",id:"synopsis-4",level:3},{value:"Examples",id:"examples-3",level:3},{value:"Options",id:"options-4",level:3},{value:"edit",id:"edit",level:2},{value:"Synopsis",id:"synopsis-5",level:3},{value:"Examples",id:"examples-4",level:3},{value:"Options",id:"options-5",level:3},{value:"edit server",id:"edit-server",level:2},{value:"Synopsis",id:"synopsis-6",level:3},{value:"Examples",id:"examples-5",level:3},{value:"Options",id:"options-6",level:3},{value:"edit spec",id:"edit-spec",level:2},{value:"Synopsis",id:"synopsis-7",level:3},{value:"Examples",id:"examples-6",level:3},{value:"Options",id:"options-7",level:3},{value:"edit target",id:"edit-target",level:2},{value:"Synopsis",id:"synopsis-8",level:3},{value:"Examples",id:"examples-7",level:3},{value:"Options",id:"options-8",level:3},{value:"edit task",id:"edit-task",level:2},{value:"Synopsis",id:"synopsis-9",level:3},{value:"Examples",id:"examples-8",level:3},{value:"Options",id:"options-9",level:3},{value:"list servers",id:"list-servers",level:2},{value:"Synopsis",id:"synopsis-10",level:3},{value:"Examples",id:"examples-9",level:3},{value:"Options",id:"options-10",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:3},{value:"list tasks",id:"list-tasks",level:2},{value:"Synopsis",id:"synopsis-11",level:3},{value:"Examples",id:"examples-10",level:3},{value:"Options",id:"options-11",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands-1",level:3},{value:"list tags",id:"list-tags",level:2},{value:"Synopsis",id:"synopsis-12",level:3},{value:"Examples",id:"examples-11",level:3},{value:"Options",id:"options-12",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands-2",level:3},{value:"list targets",id:"list-targets",level:2},{value:"Synopsis",id:"synopsis-13",level:3},{value:"Examples",id:"examples-12",level:3},{value:"Options",id:"options-13",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands-3",level:3},{value:"list specs",id:"list-specs",level:2},{value:"Synopsis",id:"synopsis-14",level:3},{value:"Examples",id:"examples-13",level:3},{value:"Options",id:"options-14",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands-4",level:3},{value:"describe servers",id:"describe-servers",level:2},{value:"Synopsis",id:"synopsis-15",level:3},{value:"Examples",id:"examples-14",level:3},{value:"Options",id:"options-15",level:3},{value:"describe tasks",id:"describe-tasks",level:2},{value:"Synopsis",id:"synopsis-16",level:3},{value:"Examples",id:"examples-15",level:3},{value:"Options",id:"options-16",level:3},{value:"describe targets",id:"describe-targets",level:2},{value:"Synopsis",id:"synopsis-17",level:3},{value:"Examples",id:"examples-16",level:3},{value:"Options",id:"options-17",level:3},{value:"describe specs",id:"describe-specs",level:2},{value:"Synopsis",id:"synopsis-18",level:3},{value:"Examples",id:"examples-17",level:3},{value:"Options",id:"options-18",level:3},{value:"ssh",id:"ssh",level:2},{value:"Synopsis",id:"synopsis-19",level:3},{value:"Examples",id:"examples-18",level:3},{value:"Options",id:"options-19",level:3},{value:"gen",id:"gen",level:2},{value:"Synopsis",id:"synopsis-20",level:3},{value:"Options",id:"options-20",level:3}];function c(e){const s={code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.h1,{id:"command-reference",children:"Command Reference"}),"\n",(0,i.jsx)(s.h2,{id:"sake",children:"sake"}),"\n",(0,i.jsx)(s.p,{children:"sake is a task runner for local and remote hosts"}),"\n",(0,i.jsx)(s.h3,{id:"synopsis",children:"Synopsis"}),"\n",(0,i.jsx)(s.p,{children:"sake is a task runner for local and remote hosts."}),"\n",(0,i.jsx)(s.p,{children:"You define servers and tasks in a sake.yaml config file and then run the tasks on the servers."}),"\n",(0,i.jsx)(s.h3,{id:"options",children:"Options"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"  -c, --config string        specify config\n  -u, --user-config string   specify user config\n      --ssh-config string    specify ssh config\n      --no-color             disable color\n  -h, --help                 help for sake\n"})}),"\n",(0,i.jsx)(s.h2,{id:"check",children:"check"}),"\n",(0,i.jsx)(s.p,{children:"Validate config"}),"\n",(0,i.jsx)(s.h3,{id:"synopsis-1",children:"Synopsis"}),"\n",(0,i.jsx)(s.p,{children:"Validate config."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"check [flags]\n"})}),"\n",(0,i.jsx)(s.h3,{id:"examples",children:"Examples"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"  # Validate config\n  sake check\n"})}),"\n",(0,i.jsx)(s.h3,{id:"options-1",children:"Options"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"  -h, --help   help for check\n"})}),"\n",(0,i.jsx)(s.h2,{id:"run",children:"run"}),"\n",(0,i.jsx)(s.p,{children:"Run tasks"}),"\n",(0,i.jsx)(s.h3,{id:"synopsis-2",children:"Synopsis"}),"\n",(0,i.jsx)(s.p,{children:"Run tasks specified in a sake.yaml file."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"run <task> [flags]\n"})}),"\n",(0,i.jsx)(s.h3,{id:"examples-1",children:"Examples"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"  # Run task <task> for all servers\n  sake run <task> --all\n\n  # Run task <task> for servers <server>\n  sake run <task> --servers <server>\n\n  # Run task <task> for all servers that have tags <tag>\n  sake run <task> --tags <tag>\n"})}),"\n",(0,i.jsx)(s.h3,{id:"options-2",children:"Options"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:'      --dry-run                     print the task to see what will be executed\n      --describe                    print task information\n      --list-hosts                  print hosts that will be targetted\n  -V, --verbose                     enable all diagnostics\n  -S, --strategy string             set execution strategy [linear|host_pinned|free]\n  -f, --forks uint32                max number of concurrent processes (default 10000)\n  -b, --batch uint32                set number of hosts to run in parallel\n  -B, --batch-p uint8               set percentage of hosts to run in parallel [0-100]\n  -a, --all                         target all hosts\n  -v, --invert                      invert matching on hosts\n  -r, --regex string                target hosts on host regex\n  -s, --servers strings             target servers by names\n  -t, --tags strings                target hosts by tags\n  -T, --target string               target hosts by target name\n      --order string                order hosts\n  -l, --limit uint32                set limit of servers to target\n  -L, --limit-p uint8               set percentage of servers to target [0-100]\n      --ignore-unreachable          ignore unreachable hosts\n  -M, --max-fail-percentage uint8   stop task execution on all servers when threshold reached\n      --any-errors-fatal            stop task execution on all servers on error\n      --ignore-errors               continue task execution on errors\n  -J, --spec string                 set spec\n  -o, --output string               set task output [text|table|table-2|table-3|table-4|html|markdown|json|csv|none]\n  -p, --print string                set print [all|stdout|stderr]\n      --omit-empty-rows             omit empty row for table output\n      --omit-empty-columns          omit empty column for table output\n  -q, --silent                      omit showing loader when running tasks\n      --confirm                     confirm root task before running\n      --step                        confirm each task before running\n      --tty                         replace the current process\n      --attach                      ssh to server after command\n      --local                       run task on localhost\n      --theme string                set theme (default "default")\n  -e, --edit                        edit task\n  -R, --report strings              reports to show (default [recap])\n  -i, --identity-file string        set identity file\n  -U, --user string                 set ssh user\n      --password string             set ssh password\n      --known-hosts-file string     set known hosts file\n  -h, --help                        help for run\n'})}),"\n",(0,i.jsx)(s.h2,{id:"exec",children:"exec"}),"\n",(0,i.jsx)(s.p,{children:"Execute arbitrary commands"}),"\n",(0,i.jsx)(s.h3,{id:"synopsis-3",children:"Synopsis"}),"\n",(0,i.jsx)(s.p,{children:"Execute arbitrary commands."}),"\n",(0,i.jsx)(s.p,{children:"Single quote your command if you don't want the\nfile globbing and environments variables expansion to take place\nbefore the command gets executed in each directory."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"exec <command> [flags]\n"})}),"\n",(0,i.jsx)(s.h3,{id:"examples-2",children:"Examples"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"  # List files in all servers\n  sake exec --all ls\n\n  # List git files that have markdown suffix for all servers\n  sake exec --all 'git ls-files | grep -e \".md\"'\n"})}),"\n",(0,i.jsx)(s.h3,{id:"options-3",children:"Options"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:'      --dry-run                     prints the command to see what will be executed\n      --describe                    print task information\n      --list-hosts                  print hosts that will be targetted\n  -V, --verbose                     enable all diagnostics\n  -S, --strategy string             set execution strategy [linear|host_pinned|free]\n  -f, --forks uint32                max number of concurrent processes (default 10000)\n  -b, --batch uint32                set number of hosts to run in parallel\n  -B, --batch-p uint8               set percentage of servers to run in parallel [0-100]\n  -a, --all                         target all servers\n  -v, --invert                      invert matching on servers\n  -r, --regex string                filter servers on host regex\n  -s, --servers strings             target servers by names\n  -t, --tags strings                target servers by tags\n  -T, --target string               target servers by target name\n      --order string                order hosts\n  -l, --limit uint32                set limit of servers to target\n  -L, --limit-p uint8               set percentage of servers to target\n      --ignore-unreachable          ignore unreachable hosts\n  -M, --max-fail-percentage uint8   stop task execution on all servers when threshold reached\n      --any-errors-fatal            stop task execution on all servers on error\n      --ignore-errors               continue task execution on errors\n  -J, --spec string                 set spec\n  -o, --output string               set task output [text|table|table-2|table-3|table-4|html|markdown|json|csv|none]\n  -p, --print string                set print [all|stdout|stderr]\n      --omit-empty-rows             omit empty row for table output\n      --omit-empty-columns          omit empty column for table output\n  -q, --silent                      omit showing loader when running tasks\n      --confirm                     confirm root task before running\n      --step                        confirm each task before running\n      --tty                         replace the current process\n      --attach                      ssh to server after command\n      --local                       run command on localhost\n      --theme string                set theme (default "default")\n  -R, --report strings              reports to show (default [recap])\n  -i, --identity-file string        set identity file for all servers\n  -U, --user string                 set ssh user\n      --password string             set ssh password for all servers\n      --known-hosts-file string     set known hosts file\n  -h, --help                        help for exec\n'})}),"\n",(0,i.jsx)(s.h2,{id:"init",children:"init"}),"\n",(0,i.jsx)(s.p,{children:"Initialize sake in the current directory"}),"\n",(0,i.jsx)(s.h3,{id:"synopsis-4",children:"Synopsis"}),"\n",(0,i.jsx)(s.p,{children:"Initialize sake in the current directory."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"init [flags]\n"})}),"\n",(0,i.jsx)(s.h3,{id:"examples-3",children:"Examples"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"  # Basic example\n  sake init\n"})}),"\n",(0,i.jsx)(s.h3,{id:"options-4",children:"Options"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"  -h, --help   help for init\n"})}),"\n",(0,i.jsx)(s.h2,{id:"edit",children:"edit"}),"\n",(0,i.jsx)(s.p,{children:"Open up sake config file in $EDITOR"}),"\n",(0,i.jsx)(s.h3,{id:"synopsis-5",children:"Synopsis"}),"\n",(0,i.jsx)(s.p,{children:"Open up sake config file in $EDITOR."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"edit [flags]\n"})}),"\n",(0,i.jsx)(s.h3,{id:"examples-4",children:"Examples"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"  # Edit current context\n  sake edit\n"})}),"\n",(0,i.jsx)(s.h3,{id:"options-5",children:"Options"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"  -h, --help   help for edit\n"})}),"\n",(0,i.jsx)(s.h2,{id:"edit-server",children:"edit server"}),"\n",(0,i.jsx)(s.p,{children:"Edit server"}),"\n",(0,i.jsx)(s.h3,{id:"synopsis-6",children:"Synopsis"}),"\n",(0,i.jsx)(s.p,{children:"Open up sake config file in $EDITOR and go to servers section."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"edit server [server] [flags]\n"})}),"\n",(0,i.jsx)(s.h3,{id:"examples-5",children:"Examples"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"  # Edit servers\n  sake edit server\n\n  # Edit server <server>\n  sake edit server <server>\n"})}),"\n",(0,i.jsx)(s.h3,{id:"options-6",children:"Options"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"  -h, --help   help for server\n"})}),"\n",(0,i.jsx)(s.h2,{id:"edit-spec",children:"edit spec"}),"\n",(0,i.jsx)(s.p,{children:"Edit spec"}),"\n",(0,i.jsx)(s.h3,{id:"synopsis-7",children:"Synopsis"}),"\n",(0,i.jsx)(s.p,{children:"Open up sake config file in $EDITOR and go to specs section."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"edit spec [spec] [flags]\n"})}),"\n",(0,i.jsx)(s.h3,{id:"examples-6",children:"Examples"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"  # Edit specs\n  sake edit spec\n\n  # Edit spec <spec>\n  sake edit spec <spec>\n"})}),"\n",(0,i.jsx)(s.h3,{id:"options-7",children:"Options"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"  -h, --help   help for spec\n"})}),"\n",(0,i.jsx)(s.h2,{id:"edit-target",children:"edit target"}),"\n",(0,i.jsx)(s.p,{children:"Edit target"}),"\n",(0,i.jsx)(s.h3,{id:"synopsis-8",children:"Synopsis"}),"\n",(0,i.jsx)(s.p,{children:"Open up sake config file in $EDITOR and go to targets section."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"edit target [target] [flags]\n"})}),"\n",(0,i.jsx)(s.h3,{id:"examples-7",children:"Examples"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"  # Edit targets\n  sake edit target\n\n  # Edit target <target>\n  sake edit target <target>\n"})}),"\n",(0,i.jsx)(s.h3,{id:"options-8",children:"Options"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"  -h, --help   help for target\n"})}),"\n",(0,i.jsx)(s.h2,{id:"edit-task",children:"edit task"}),"\n",(0,i.jsx)(s.p,{children:"Edit task"}),"\n",(0,i.jsx)(s.h3,{id:"synopsis-9",children:"Synopsis"}),"\n",(0,i.jsx)(s.p,{children:"Open up sake config file in $EDITOR and go to tasks section."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"edit task [task] [flags]\n"})}),"\n",(0,i.jsx)(s.h3,{id:"examples-8",children:"Examples"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"  # Edit tasks\n  sake edit task\n\n  # Edit task <task>\n  sake edit task <task>\n"})}),"\n",(0,i.jsx)(s.h3,{id:"options-9",children:"Options"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"  -h, --help   help for task\n"})}),"\n",(0,i.jsx)(s.h2,{id:"list-servers",children:"list servers"}),"\n",(0,i.jsx)(s.p,{children:"List servers"}),"\n",(0,i.jsx)(s.h3,{id:"synopsis-10",children:"Synopsis"}),"\n",(0,i.jsx)(s.p,{children:"List servers."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"list servers [servers] [flags]\n"})}),"\n",(0,i.jsx)(s.h3,{id:"examples-9",children:"Examples"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"  # List all servers\n  sake list servers\n\n  # List servers <server>\n  sake list servers <server>\n\n  # List servers that have tag <tag>\n  sake list servers --tags <tag>\n"})}),"\n",(0,i.jsx)(s.h3,{id:"options-10",children:"Options"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"  -v, --invert            invert matching on servers\n  -r, --regex string      filter servers on host regex\n  -t, --tags strings      filter servers by tags\n  -H, --all-headers       select all server headers\n      --headers strings   set headers (default [server,host,tags,desc])\n  -h, --help              help for servers\n"})}),"\n",(0,i.jsx)(s.h3,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:'  -o, --output string   set table output [table|table-2|table-3|table-4|html|markdown|json|csv] (default "table")\n      --theme string    set theme (default "default")\n'})}),"\n",(0,i.jsx)(s.h2,{id:"list-tasks",children:"list tasks"}),"\n",(0,i.jsx)(s.p,{children:"List tasks"}),"\n",(0,i.jsx)(s.h3,{id:"synopsis-11",children:"Synopsis"}),"\n",(0,i.jsx)(s.p,{children:"List tasks."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"list tasks [tasks] [flags]\n"})}),"\n",(0,i.jsx)(s.h3,{id:"examples-10",children:"Examples"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"  # List all tasks\n  sake list tasks\n\n  # List task <task>\n  sake list task <task>\n"})}),"\n",(0,i.jsx)(s.h3,{id:"options-11",children:"Options"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"  -H, --all-headers       select all task headers\n      --headers strings   set headers (default [task,desc])\n  -h, --help              help for tasks\n"})}),"\n",(0,i.jsx)(s.h3,{id:"options-inherited-from-parent-commands-1",children:"Options inherited from parent commands"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:'  -o, --output string   set table output [table|table-2|table-3|table-4|html|markdown|json|csv] (default "table")\n      --theme string    set theme (default "default")\n'})}),"\n",(0,i.jsx)(s.h2,{id:"list-tags",children:"list tags"}),"\n",(0,i.jsx)(s.p,{children:"List tags"}),"\n",(0,i.jsx)(s.h3,{id:"synopsis-12",children:"Synopsis"}),"\n",(0,i.jsx)(s.p,{children:"List tags."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"list tags [tags] [flags]\n"})}),"\n",(0,i.jsx)(s.h3,{id:"examples-11",children:"Examples"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"  # List all tags\n  sake list tags\n"})}),"\n",(0,i.jsx)(s.h3,{id:"options-12",children:"Options"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"      --headers strings   set headers (default [tag,server])\n  -h, --help              help for tags\n"})}),"\n",(0,i.jsx)(s.h3,{id:"options-inherited-from-parent-commands-2",children:"Options inherited from parent commands"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:'  -o, --output string   set table output [table|table-2|table-3|table-4|html|markdown|json|csv] (default "table")\n      --theme string    set theme (default "default")\n'})}),"\n",(0,i.jsx)(s.h2,{id:"list-targets",children:"list targets"}),"\n",(0,i.jsx)(s.p,{children:"List targets"}),"\n",(0,i.jsx)(s.h3,{id:"synopsis-13",children:"Synopsis"}),"\n",(0,i.jsx)(s.p,{children:"List targets."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"list targets [targets] [flags]\n"})}),"\n",(0,i.jsx)(s.h3,{id:"examples-12",children:"Examples"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"  # List all targets\n  sake list targets\n"})}),"\n",(0,i.jsx)(s.h3,{id:"options-13",children:"Options"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"      --headers strings   set headers. Available headers: name, regex (default [target,desc,all,servers,tags,regex,invert,limit,limit_p])\n  -h, --help              help for targets\n"})}),"\n",(0,i.jsx)(s.h3,{id:"options-inherited-from-parent-commands-3",children:"Options inherited from parent commands"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:'  -o, --output string   set table output [table|table-2|table-3|table-4|html|markdown|json|csv] (default "table")\n      --theme string    set theme (default "default")\n'})}),"\n",(0,i.jsx)(s.h2,{id:"list-specs",children:"list specs"}),"\n",(0,i.jsx)(s.p,{children:"List specs"}),"\n",(0,i.jsx)(s.h3,{id:"synopsis-14",children:"Synopsis"}),"\n",(0,i.jsx)(s.p,{children:"List specs."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"list specs [specs] [flags]\n"})}),"\n",(0,i.jsx)(s.h3,{id:"examples-13",children:"Examples"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"  # List all specs\n  sake list specs\n"})}),"\n",(0,i.jsx)(s.h3,{id:"options-14",children:"Options"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"      --headers strings   set headers (default [spec,desc,describe,list_hosts,order,silent,hidden,strategy,batch,batch_p,forks,output,print,any_errors_fatal,max_fail_percentage,ignore_errors,ignore_unreachable,omit_empty,report,verbose,confirm,step])\n  -h, --help              help for specs\n"})}),"\n",(0,i.jsx)(s.h3,{id:"options-inherited-from-parent-commands-4",children:"Options inherited from parent commands"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:'  -o, --output string   set table output [table|table-2|table-3|table-4|html|markdown|json|csv] (default "table")\n      --theme string    set theme (default "default")\n'})}),"\n",(0,i.jsx)(s.h2,{id:"describe-servers",children:"describe servers"}),"\n",(0,i.jsx)(s.p,{children:"Describe servers"}),"\n",(0,i.jsx)(s.h3,{id:"synopsis-15",children:"Synopsis"}),"\n",(0,i.jsx)(s.p,{children:"Describe servers."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"describe servers [servers] [flags]\n"})}),"\n",(0,i.jsx)(s.h3,{id:"examples-14",children:"Examples"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"  # Describe all servers\n  sake describe servers\n\n  # Describe servers that have tag <tag>\n  sake describe servers --tags <tag>\n"})}),"\n",(0,i.jsx)(s.h3,{id:"options-15",children:"Options"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"  -t, --tags strings   filter servers by their tag\n  -r, --regex string   filter servers on host regex\n  -v, --invert         invert matching on servers\n  -e, --edit           edit server\n  -h, --help           help for servers\n"})}),"\n",(0,i.jsx)(s.h2,{id:"describe-tasks",children:"describe tasks"}),"\n",(0,i.jsx)(s.p,{children:"Describe tasks"}),"\n",(0,i.jsx)(s.h3,{id:"synopsis-16",children:"Synopsis"}),"\n",(0,i.jsx)(s.p,{children:"Describe tasks."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"describe tasks [tasks] [flags]\n"})}),"\n",(0,i.jsx)(s.h3,{id:"examples-15",children:"Examples"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"  # Describe all tasks\n  sake describe tasks\n\n  # Describe task <task>\n  sake describe task <task>\n"})}),"\n",(0,i.jsx)(s.h3,{id:"options-16",children:"Options"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"  -e, --edit   edit task\n  -h, --help   help for tasks\n"})}),"\n",(0,i.jsx)(s.h2,{id:"describe-targets",children:"describe targets"}),"\n",(0,i.jsx)(s.p,{children:"Describe targets"}),"\n",(0,i.jsx)(s.h3,{id:"synopsis-17",children:"Synopsis"}),"\n",(0,i.jsx)(s.p,{children:"Describe targets."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"describe targets [targets] [flags]\n"})}),"\n",(0,i.jsx)(s.h3,{id:"examples-16",children:"Examples"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"  # Describe all targets\n  sake describe targets\n"})}),"\n",(0,i.jsx)(s.h3,{id:"options-17",children:"Options"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"  -e, --edit   edit target\n  -h, --help   help for targets\n"})}),"\n",(0,i.jsx)(s.h2,{id:"describe-specs",children:"describe specs"}),"\n",(0,i.jsx)(s.p,{children:"Describe specs"}),"\n",(0,i.jsx)(s.h3,{id:"synopsis-18",children:"Synopsis"}),"\n",(0,i.jsx)(s.p,{children:"Describe specs."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"describe specs [specs] [flags]\n"})}),"\n",(0,i.jsx)(s.h3,{id:"examples-17",children:"Examples"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"  # Describe all specs\n  sake describe specs\n"})}),"\n",(0,i.jsx)(s.h3,{id:"options-18",children:"Options"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"  -e, --edit   edit spec\n  -h, --help   help for specs\n"})}),"\n",(0,i.jsx)(s.h2,{id:"ssh",children:"ssh"}),"\n",(0,i.jsx)(s.p,{children:"ssh to server"}),"\n",(0,i.jsx)(s.h3,{id:"synopsis-19",children:"Synopsis"}),"\n",(0,i.jsx)(s.p,{children:"ssh to server."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"ssh <server> [flags]\n"})}),"\n",(0,i.jsx)(s.h3,{id:"examples-18",children:"Examples"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"  # ssh to server\n  sake ssh <server>\n"})}),"\n",(0,i.jsx)(s.h3,{id:"options-19",children:"Options"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"  -i, --identity-file string   set identity file for all servers\n      --password string        set ssh password for all servers\n  -h, --help                   help for ssh\n"})}),"\n",(0,i.jsx)(s.h2,{id:"gen",children:"gen"}),"\n",(0,i.jsx)(s.p,{children:"Generate man page"}),"\n",(0,i.jsx)(s.h3,{id:"synopsis-20",children:"Synopsis"}),"\n",(0,i.jsx)(s.p,{children:"Generate man page"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"gen [flags]\n"})}),"\n",(0,i.jsx)(s.h3,{id:"options-20",children:"Options"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:'  -d, --dir string   directory to save manpage to (default "./")\n  -h, --help         help for gen\n'})})]})}function p(e={}){const{wrapper:s}={...(0,r.a)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},1151:(e,s,n)=>{n.d(s,{Z:()=>a,a:()=>l});var i=n(7294);const r={},t=i.createContext(r);function l(e){const s=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),i.createElement(t.Provider,{value:s},e.children)}}}]);