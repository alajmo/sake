"use strict";(self.webpackChunksake=self.webpackChunksake||[]).push([[215],{4386:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>l,toc:()=>a});var t=s(5893),i=s(1151);const r={},o="Inventory",l={id:"inventory",title:"Inventory",description:"Inventory is a collection of hosts that you can execute tasks on. There are 4 ways to specify hosts:",source:"@site/../../sake/docs/inventory.md",sourceDirName:".",slug:"/inventory",permalink:"/inventory",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Command Reference",permalink:"/command-reference"},next:{title:"Task Execution",permalink:"/task-execution"}},d={},a=[{value:"Provide Identity and Password Credentials",id:"provide-identity-and-password-credentials",level:2},{value:"Known Hosts",id:"known-hosts",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"inventory",children:"Inventory"}),"\n",(0,t.jsx)(n.p,{children:"Inventory is a collection of hosts that you can execute tasks on. There are 4 ways to specify hosts:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"servers:\n  # Single Host\n  single-1:\n    host: 192.168.1.1\n    user: test\n    port: 33\n    bastion: test@192.168.0.1:22\n  tags: [web]\n\n  # Multipe hosts using a list\n  many-1:\n    hosts:\n      - test@192.168.1.1:22\n      - test@192.168.1.2:22\n    tags: [web, prod]\n\n  # Multiple hosts using a ranges\n  many-2:\n    hosts: test@192.168.1.[1:2]:22\n    tags: [web, prod]\n\n  # Multiple hosts by invoking a shell command\n  many-3:\n    inventory: echo test@192.168.1.1:22 test@192.168.1.2:22\n    tags: [web, prod]\n"})}),"\n",(0,t.jsx)(n.p,{children:"To target the hosts in a task there's multiple ways:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"all"}),": target"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"servers"}),": a list of single hosts or group of hosts","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["supports range as well, for instance ",(0,t.jsx)(n.code,{children:'--server "list[0:1]"'}),", select first and second host"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"tags"}),": target hosts that have a specific tag"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"regex"}),": target hosts on host regex"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"invert"}),": invert matching on hosts"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Furthermore, to limit the number of targetted servers, you can use one of following properties:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"limit"}),": limit the number of targetted hosts"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"limit_p"}),": limit the number of targetted hosts in percentage"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"provide-identity-and-password-credentials",children:"Provide Identity and Password Credentials"}),"\n",(0,t.jsxs)(n.p,{children:["By default ",(0,t.jsx)(n.code,{children:"sake"})," will attempt to load identity keys from an SSH agent if it's running in the background. However, if you wish to provide credentials manually, you can do so by (first takes precedence):"]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["setting ",(0,t.jsx)(n.code,{children:"--identity-file"})," and/or ",(0,t.jsx)(n.code,{children:"--password"})," flags"]}),"\n",(0,t.jsx)(n.li,{children:"specifying it in the server definition"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"The type of auth used is determined by:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["if ",(0,t.jsx)(n.code,{children:"identity-file"})," and ",(0,t.jsx)(n.code,{children:"password"})," are provided, then it assumes password protected identity key"]}),"\n",(0,t.jsxs)(n.li,{children:["if only ",(0,t.jsx)(n.code,{children:"identity-file"})," is provided, then it first tries without passphrase, if file is encrypted, it will prompt for passphrase"]}),"\n",(0,t.jsxs)(n.li,{children:["if only ",(0,t.jsx)(n.code,{children:"password"})," is provided, then it assumes password protected auth"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"servers:\n  server-1:\n    host: server-1.lan\n    identity_file: id_rsa\n    password: $(echo $MY_SECRET_PASSWORD)\n"})}),"\n",(0,t.jsxs)(n.p,{children:["You can also define entries in your ",(0,t.jsx)(n.code,{children:"~/.ssh/config"})," file and ",(0,t.jsx)(n.code,{children:"sake"})," will try to resolve them."]}),"\n",(0,t.jsx)(n.h2,{id:"known-hosts",children:"Known Hosts"}),"\n",(0,t.jsxs)(n.p,{children:["By default a ",(0,t.jsx)(n.code,{children:"known_hosts"})," file is used to verify host connections. If you wish to disable verification, set the global property ",(0,t.jsx)(n.code,{children:"disable_verify_host"})," to true:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"disable_verify_host: true\n"})}),"\n",(0,t.jsxs)(n.p,{children:["The default location of the known hosts file is ",(0,t.jsx)(n.code,{children:"$HOME/.ssh/known_hosts"}),". If you wish change this to another file, then set the global property ",(0,t.jsx)(n.code,{children:"known_hosts_file"})," to your desired filepath:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"known_hosts_file: ./known_hosts\n"})})]})}function h(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},1151:(e,n,s)=>{s.d(n,{Z:()=>l,a:()=>o});var t=s(7294);const i={},r=t.createContext(i);function o(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);